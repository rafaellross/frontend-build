{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","Components/NavBar/index.js","Scenes/Home/index.js","Components/DataTable/index.js","Api.js","Scenes/Jobs/index.js","Scenes/Users/index.js","Scenes/Employees/index.js","Helpers.js","Components/Employee/index.js","Scenes/Employees/edit.js","Scenes/Employees/add.js","Reports/PDF/index.js","Reports/Employees/list.js","Reports/Job/FireRegister.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","NavBar","props","state","auth","open","drawerItems","title","path","icon","toggleDrawer","bind","console","log","this","setState","prevState","AppBar","position","IconButton","edge","color","aria-label","onClick","Drawer","anchor","onClose","ModalProps","onBackdropClick","role","onKeyDown","List","map","item","ListItem","button","key","ListItemIcon","to","style","textDecoration","fontFamily","Divider","text","index","ListItemText","primary","Typography","variant","Avatar","src","aria-controls","aria-haspopup","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","Component","Home","DataTable","columns","data","options","selection","exportButton","pageSizeOptions","pageSize","components","Toolbar","marginBottom","toolBar","actions","tooltip","evt","alert","length","event","api","token","localStorage","Math","random","toString","substr","headers","getAll","table","query","fetch","then","res","json","update","model","method","body","JSON","stringify","Jobs","field","type","render","rowData","Switch","checked","inactive","onChange","enableDisableJob","name","inputProps","jobs","API","loading","job","Object","assign","filter","loadData","maxWidth","marginLeft","padding","isLoading","Users","administrator","enabled","enableDisableUser","user","users","Employees","showInactive","selectedCompany","openDialogDisable","width","toLowerCase","replace","l","toUpperCase","getRole","location","export","enableDisableEmployee","employees","employee","filterEmployees","company","filterInactives","filterCompany","buttons","ButtonGroup","minWidth","Button","component","Link","FormControlLabel","value","control","toggleInactives","label","labelPlacement","selectCompany","FormControl","InputLabel","Select","labelId","changeCompany","target","dialog","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","handleDialog","Employee","dob","phone","bonus","bonus_type","rdo_bal","pld","anl","anniversary_dt","apprentice_year","employee_id","car_allowance","history","goBack","className","classes","paper","textAlign","action","Paper","elevation","root","noValidate","autoComplete","TextField","required","InputLabelProps","shrink","handleChange","select","handleSave","withRouter","withStyles","theme","margin","spacing","display","flexWrap","flexDirection","alignItems","EditEmployee","useParams","AddEmployee","Pdf","numPages","pageNumber","onDocumentLoadSuccess","goToPrevPage","goToNextPage","file","onLoadSuccess","styles","StyleSheet","create","page","section","flexGrow","tableView","marginTop","tableHead","fontSize","dateTime","Date","tableSize","MyDocument","size","debug","fontStyle","fixed","toLocaleDateString","right","top","flex","weighting","getContent","r","ListEmployees","height","stylesHeader","borderStyle","borderWidth","borderColor","backgroundColor","fontWeight","row","rowsTitle","rowsDetail","paddingLeft","logo","borderBottom","borderTop","stylesTable","header","cell","photo","FireRegister","project","date","penetrations","match","params","description","orientation","fire_number","drawing","fire_photo","fire_resist_level","install_by","formated_date","manufacturer","App","exact","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.77a08ee5.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 286;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Home from '@material-ui/icons/Home';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport People from '@material-ui/icons/People';\r\nimport AccountTree from '@material-ui/icons/AccountTree';\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport Assignment from '@material-ui/icons/Assignment';\r\nimport HowToReg from '@material-ui/icons/HowToReg';\r\n\r\n\r\nclass NavBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n             auth: false,\r\n             open: false,\r\n             drawerItems: [\r\n               {\r\n                title: \"Home\",\r\n                path: \"/\",\r\n                icon: <Home />\r\n              },\r\n              {\r\n                title: \"Users\",\r\n                path: \"/users\",\r\n                icon: <People />\r\n              },\r\n\r\n              {\r\n                title: \"Jobs\",\r\n                path: \"/jobs\",\r\n                icon: <AccountTree />\r\n              },\r\n              {\r\n                title: \"Employees\",\r\n                path: \"/employees\",\r\n                icon: <HowToReg />\r\n              },\r\n\r\n              {\r\n                title: \"Settings\",\r\n                path: \"/settings\",\r\n                icon: <Settings />\r\n              },\r\n\r\n              {\r\n                title: \"Time Sheets\",\r\n                path: \"/timesheets\",\r\n                icon: <Assignment />\r\n              },\r\n\r\n\r\n\r\n            ]\r\n        }\r\n        //{['Home', 'Users', 'Employees', 'Jobs', 'Parameters', 'Time Sheets'].map((text, index) => (\r\n\r\n        this.toggleDrawer = this.toggleDrawer.bind(this);\r\n    }\r\n\r\n    toggleDrawer(){\r\n      console.log(\"Toggle\")\r\n      this.setState((prevState, props) => {\r\n        return {open: !prevState.open};\r\n      });\r\n\r\n    }\r\n\r\n    render() {\r\n        const { auth } = true;\r\n\r\n        return (\r\n            <div>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={this.toggleDrawer}>\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n\r\n                      <Drawer anchor=\"left\" open={this.state.open} onClose={console.log(\"close\")} ModalProps={{ onBackdropClick: this.toggleDrawer }}>\r\n                      <div\r\n                        role=\"presentation\"\r\n                        onClick={console.log('click')}\r\n                        onKeyDown={console.log('key down')}\r\n                      >\r\n                        <List>\r\n                          {this.state.drawerItems.map((item) => (\r\n                            <ListItem button key={item.title}>\r\n                              <ListItemIcon>{item.icon}</ListItemIcon>\r\n                              <Link onClick={this.toggleDrawer} to={item.path} style={{color: 'inherit', textDecoration: 'inherit', fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'}}>{item.title}</Link>\r\n\r\n                            </ListItem>\r\n                          ))}\r\n                        </List>\r\n                        <Divider />\r\n                        <List>\r\n                          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                              <ListItemText primary={text} />\r\n                            </ListItem>\r\n                          ))}\r\n                        </List>\r\n                      </div>\r\n                      </Drawer>\r\n\r\n                    <Typography variant=\"h6\">\r\n                    <Avatar src=\"/img/brand.ico\"/>\r\n\r\n                    </Typography>\r\n                    {auth && (\r\n                        <div>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={console.log('handleMenu')}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={false}\r\n                            anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                            }}\r\n                            open={this.state.open}\r\n                            onClose={console.log('')}\r\n                        >\r\n                            <MenuItem onClick={console.log('')}>Profile</MenuItem>\r\n                            <MenuItem onClick={console.log('')}>My account</MenuItem>\r\n                        </Menu>\r\n                        </div>\r\n                    )}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar\r\n","import React, { Component } from 'react'\r\n\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span>Home</span>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\n\r\nimport MaterialTable, {MTableToolbar} from 'material-table'\r\n\r\n\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nclass DataTable extends Component {\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n\r\n          <MaterialTable\r\n          style={this.props.style}\r\n          title={this.props.title}\r\n          columns={this.props.columns}\r\n          data={this.props.data}\r\n          options={{\r\n            selection: true,\r\n            exportButton: true,\r\n            pageSizeOptions: [30, 60, 120, 240, 1000],\r\n            pageSize: 30,\r\n\r\n          }}\r\n\r\n          components={{\r\n            Toolbar: props => (\r\n\r\n              <div>\r\n\r\n                <MTableToolbar {...props} />\r\n                <Divider variant=\"middle\" style={{marginBottom: 10}}/>\r\n                {this.props.toolBar}\r\n              </div>\r\n            ),\r\n          }}\r\n\r\n\r\n\r\n\r\n          actions={[\r\n              {\r\n                tooltip: 'Remove All Selected Users',\r\n                icon: 'delete',\r\n                onClick: (evt, data) => alert('You want to delete ' + data.length + ' rows')\r\n              },\r\n              {\r\n                icon: 'print',\r\n                tooltip: 'Print Selecteds',\r\n                onClick: (event, data) => alert(\"You printed \" + data.length)\r\n              }\r\n\r\n          ]}\r\n        />\r\n        </div>\r\n\r\n      )\r\n    }\r\n  }\r\nexport default DataTable\r\n","\r\nconst api = \"http://localhost/app/api/api\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (table, id) =>\r\n  fetch(`${api}/${table}/${id}`, { headers })\r\n\r\n    .then(res => res.json())\r\n    .then(data => data)\r\n\r\n\r\n\r\nexport const getAll = (table, query) =>\r\n  fetch(`${api}/${table}${query ? `/${query}` : ''}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data)\r\n\r\nexport const update = (table, model) =>\r\n  fetch(`${api}/${table}/${model.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ model })\r\n  }).then(res => res.json())\r\n\r\n\r\n  export const save = (table, model) =>\r\n\r\n  fetch(`${api}/${table}${model.id ? `/${model.id}` : ''}`, {\r\n    method: model.id ? 'PUT' : 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify( model )\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data)\r\n","import React, { Component } from 'react'\r\nimport DataTable from '../../Components/DataTable'\r\nimport * as API from '../../Api'\r\nimport Fireplace from '@material-ui/icons/Fireplace';\r\n\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport { Link } from 'react-router-dom'\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport class Jobs extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            columns: [\r\n                    \r\n                { title: '#', field: 'id', type: 'numeric'},\r\n                { title: 'Code', field: 'code' },\r\n                { title: 'Description', field: 'description'},\r\n                { title: 'Address', field: 'address'},\r\n                {\r\n                    field: 'inactive',\r\n                    title: 'Active Job?',                \r\n                    render: rowData => (\r\n                            <Switch\r\n                                checked={rowData.inactive === 1 || rowData.inactive ? false : true}\r\n                                onChange={() => this.enableDisableJob(rowData.id)}\r\n                                color=\"primary\"\r\n                                    name=\"checkedB\"\r\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                />                        \r\n                    )                    \r\n                },\r\n    \r\n                {\r\n                    field: 'edit',\r\n                    title: 'Edit',\r\n                    render: rowData => (\r\n                        <div>\r\n                            <Link to={`/jobs/edit/${rowData.id}`}><Edit /></Link>                        \r\n                        </div>\r\n                        )\r\n                } ,\r\n                {\r\n                    field: 'fire_register',\r\n                    title: 'Fire Register',\r\n                    render: rowData => (\r\n                        <div>\r\n                            <Link to={`/reports/jobs/fire/${rowData.id}`}><Fireplace /></Link>                        \r\n                        </div>\r\n                        )\r\n                } ,\r\n                           \r\n    \r\n                \r\n            ],        \r\n            jobs: [\r\n            ]\r\n        }\r\n    \r\n    }\r\n    \r\n    loadData (table) {\r\n        API.getAll(table)\r\n        .then((data) => {            \r\n            this.setState(() => ({\r\n                data: data,\r\n                loading: false\r\n          }))                    \r\n        })    \r\n    }\r\n\r\n    enableDisableJob(id) {\r\n        \r\n        let jobs = this.state.data.map((job) => job.id !== id ? job :     \r\n        Object.assign({}, job, {inactive: !job.inactive}));        \r\n        this.setState(() => ({\r\n            data: jobs            \r\n        }))                \r\n        \r\n        API.update('jobs', jobs.filter(job => job.id === id)[0])\r\n        .then((job) => {\r\n            console.log(job)\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.loadData('jobs')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <DataTable style={{maxWidth: '80%', marginLeft: '10%', padding: 10}} columns={this.state.columns} table={\"jobs\"} title=\"Jobs\" data={this.state.data} isLoading={this.state.loading}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Jobs\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport DataTable from '../../Components/DataTable'\r\nimport * as API from '../../Api'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Block from '@material-ui/icons/Block';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport { Link } from 'react-router-dom';\r\nimport Switch from '@material-ui/core/Switch';\r\nexport class Users extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            columns: [\r\n                    \r\n                { title: '#', field: 'id', type: 'numeric'},\r\n                { title: 'User', field: 'username' },\r\n                { title: 'Administrator', field: 'description', render: rowData => rowData.administrator ? 'Yes' : 'No'},\r\n                { title: 'Date Created', field: 'created_at', type: 'date'},\r\n                {\r\n                    field: 'inactive',\r\n                    title: 'Active?',                \r\n                    render: rowData => (\r\n                        <Switch\r\n                                checked={rowData.enabled === 1 || rowData.enabled ? true : false}\r\n                                onChange={() => this.enableDisableUser(rowData.id)}\r\n                                color=\"primary\"\r\n                                name=\"checkedB\"\r\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                            />                        \r\n                    )                    \r\n                \r\n                },\r\n    \r\n                {\r\n                    field: 'edit',\r\n                    title: 'Edit',\r\n                    render: rowData => (\r\n                        <div>\r\n                            <Link to={`/users/edit/${rowData.id}`}><Edit /></Link>                        \r\n                        </div>\r\n                        )\r\n                }            \r\n    \r\n                \r\n            ],        \r\n            data: [\r\n            ]\r\n        }\r\n    \r\n    }\r\n    \r\n    loadData (table) {\r\n        API.getAll(table)\r\n        .then((data) => {            \r\n            this.setState(() => ({\r\n                data: data,\r\n                loading: false\r\n          }))                    \r\n        })    \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData('users');\r\n\r\n    }\r\n\r\n    updateUser(user) {\r\n        console.log(user);\r\n        \r\n        API.update('users', user)\r\n        .then(\r\n            this.loadData('users')\r\n        )\r\n        \r\n    }\r\n\r\n    enableDisableUser(id) {\r\n        \r\n        let users = this.state.data.map((user) => user.id !== id ? user :     \r\n        Object.assign({}, user, {enabled: !user.enabled}));        \r\n        this.setState(() => ({\r\n            data: users            \r\n        }))                \r\n        \r\n        API.update('users', users.filter(user => user.id === id)[0])\r\n        .then((user) => {\r\n            console.log(user)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <DataTable style={{maxWidth: '80%', marginLeft: '10%', padding: 10}} columns={this.state.columns} table={\"users\"} title=\"Users\" data={this.state.data} isLoading={this.state.loading}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport DataTable from '../../Components/DataTable'\r\nimport * as API from '../../Api'\r\nimport * as Helpers from '../../Helpers'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Block from '@material-ui/icons/Block';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport { Link } from 'react-router-dom'\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\n\r\n\r\n\r\nfunction dialogDisableEmployee(id) {\r\n    \r\n}\r\n\r\nexport class Employees extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            showInactive: false,\r\n            selectedCompany: 'A',\r\n            openDialogDisable: false,\r\n            columns: [\r\n                    \r\n                { title: '#', field: 'id', width: 5},\r\n                { title: 'Name', field: 'name', render: rowData => <span>{Helpers.capitaliseString(rowData.name.toLowerCase())}</span> },\r\n                { title: 'D.O.B', field: 'dob', type: 'date' },\r\n                { title: 'Phone', field: 'phone' },\r\n                { title: 'RDO', field: 'rdo_bal' },\r\n                { title: 'PLD', field: 'pld' },            \r\n                { title: 'Annual Leave Balance', field: 'anl' },                            \r\n                { \r\n                    title: 'Role', \r\n                    field: 'location',\r\n                    render: rowData => <span>{this.getRole(rowData.location)}</span>\r\n                    \r\n                },    \r\n                { title: 'Apprentice Year', field: 'apprentice_year' },                                                            \r\n                { title: 'Apprentice Rollover', field: 'anniversary_dt', type: 'date' },                                                                            \r\n                {\r\n                    field: 'inactive',\r\n                    title: 'Active?',  \r\n                    export: false,              \r\n                    render: rowData => (\r\n                        <Switch\r\n                                checked={rowData.inactive === 1 || rowData.inactive ? false : true}\r\n                                onChange={() => this.enableDisableEmployee(rowData.id)}\r\n                                color=\"primary\"\r\n                                name=\"checkedB\"\r\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                            />                        \r\n                    )                    \r\n                \r\n                },\r\n                { title: 'Job', field: 'job_code' },                                                            \r\n                {\r\n                    field: 'edit',\r\n                    title: 'Edit',\r\n                    export: false,\r\n                    render: rowData => (\r\n                        <div>\r\n                            <Link to={`/employees/${rowData.id}`}><Edit /></Link>                        \r\n                        </div>\r\n                        )\r\n                }            \r\n    \r\n                \r\n            ],        \r\n            employees: [\r\n            ]\r\n        }\r\n    }\r\n    \r\n    toggleInactives() {        \r\n        this.setState((prevState, props) => ({\r\n            showInactive: !prevState.showInactive            \r\n        }))                \r\n        this.loadData('employees')\r\n\r\n    }\r\n\r\n\r\n    handleDialog() {\r\n        //TODO\r\n    }\r\n\r\n    enableDisableEmployee(id) {\r\n              \r\n        let employees = this.state.data.map((employee) => employee.id !== id ? employee :     \r\n        Object.assign({}, employee, {inactive: !employee.inactive}));        \r\n        this.setState(() => ({\r\n            data: this.filterEmployees(employees)\r\n        }))                \r\n        \r\n        API.update('employees', employees.filter(employee => employee.id === id)[0])\r\n        .then((employee) => {\r\n            console.log(employee)\r\n        })\r\n    }\r\n\r\n\r\n    getRole(role){\r\n        switch (role) {\r\n            case 'P':                \r\n                return 'Plumber';                                \r\n            case 'O':\r\n                return 'Office'\r\n\r\n            case 'A':\r\n                return 'Apprentice';\r\n            case 'L':\r\n                return 'Labourer';                \r\n            default:\r\n                return '-';\r\n        }\r\n\r\n    }\r\n\r\n    loadData(table) {\r\n        API.getAll(table)\r\n        .then((data) => {            \r\n            this.setState(() => ({\r\n                data: this.filterEmployees(data),\r\n                loading: false\r\n          }))                    \r\n        })    \r\n    }\r\n\r\n    filterCompany(data) {\r\n        console.log('Filter company', this.state.selectedCompany);\r\n        if (this.state.selectedCompany === 'A') {\r\n            console.log('Returned all companies');\r\n            return data;\r\n        } else {\r\n            console.log('Returned Company', this.state.selectedCompany);\r\n            return data.filter(employee => employee.company === this.state.selectedCompany)\r\n        }        \r\n    }\r\n\r\n    filterInactives(data) {\r\n        if (this.state.showInactive) {\r\n            return data;\r\n        } else {\r\n            return data.filter(employee => !employee.inactive)\r\n        }\r\n    }\r\n\r\n    filterEmployees(data) {\r\n\r\n        let filterInactives = this.filterInactives(data);\r\n        let filterCompany = this.filterCompany(filterInactives);\r\n        return filterCompany; \r\n    }\r\n\r\n    update(model){\r\n        API.update('employees', model)\r\n        .then((data) => {            \r\n            console.log(data)\r\n        })    \r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadData('employees')\r\n    }\r\n\r\n    changeCompany(company) {\r\n        this.setState(() => ({\r\n            selectedCompany: company\r\n        }))   \r\n        \r\n        this.loadData('employees')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        const buttons = <ButtonGroup aria-label=\"outlined primary button group\" style={{minWidth: 200+'px', marginLeft: 10+'px'}}>\r\n                            <Button variant=\"contained\" color=\"primary\" style={{width: '100%', padding: '10px'}} component={Link} to={'/employees/add '}>Add</Button>                                                \r\n                        </ButtonGroup>\r\n\r\n        const showInactive = <FormControlLabel value=\"inactives\" control={<Switch checked={this.state.showInactive} onChange={(e) => this.toggleInactives(e)} color=\"primary\" name=\"checkedB\" inputProps={{ 'aria-label': 'primary checkbox' }}/>} label=\"Show Inactives\" labelPlacement=\"bottom\" />;\r\n        const selectCompany =     <FormControl style={{width: 200}} >\r\n                                        <InputLabel id=\"demo-simple-select-label\">Select Company</InputLabel>\r\n                                        <Select\r\n                                        labelId=\"select-company-label\"                                        \r\n                                        id=\"select-company-label\"                                        \r\n                                        onChange={(e) => this.changeCompany(e.target.value)}\r\n                                        value={this.state.selectedCompany}\r\n                                        >\r\n                                        <MenuItem value=\"A\">All</MenuItem>\r\n                                        <MenuItem value='C'>Construction</MenuItem>\r\n                                        <MenuItem value='M'>Maintenance</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n        \r\n        const toolBar = <div>{buttons}{showInactive}{selectCompany}</div>\r\n\r\n        const dialog = \r\n            \r\n                <div>                            \r\n                  <Dialog\r\n                    open={this.state.openDialogDisable}\r\n                    \r\n                    \r\n                    aria-labelledby=\"scroll-dialog-title\"\r\n                    aria-describedby=\"scroll-dialog-description\"\r\n                  >\r\n                    <DialogTitle id=\"scroll-dialog-title\">Inactivate Employee</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText>\r\n                        Are you sure you want to inactivate this employee?\r\n                      </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={() => this.handleDialog(false)} color=\"primary\">\r\n                        Cancel\r\n                      </Button>\r\n                      <Button onClick={() => this.handleDialog(true)} color=\"primary\">\r\n                        Ok\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </div>\r\n\r\n        return (\r\n            <div>\r\n                <DataTable toolBar={toolBar} style={{maxWidth: '90%', marginLeft: '5%'}} columns={this.state.columns} table={\"employees\"} title=\"Employees\" data={this.state.data} isLoading={this.state.loading}/>\r\n                {dialog}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employees\r\n\r\n\r\n","export const sortObjArray = (arr, property, asc = true) => {\r\n    //console.log('Start Sort...', 'Property:', property, 'Array:', arr, asc ? 'asc' : 'desc')\r\n    let result = [];\r\n    if (asc) {\r\n        \r\n        result = arr.sort(function (a, b) {\r\n            return a[property] - b[property]\r\n        });\r\n        \r\n        \r\n    } else {\r\n        arr.sort(function (a, b) {\r\n            return b[property] - a[property]\r\n        });\r\n        \r\n    }\r\n\r\n    console.log('Start Sort...', 'Property:', property, 'Array:', result, asc ? 'asc' : 'desc')\r\n    return result;\r\n\r\n}\r\n\r\nexport const descendingComparator = (a, b, orderBy) => {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  export const getComparator = (order, orderBy) => {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  \r\n  export const stableSort = (array, comparator) =>{\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n  }\r\n\r\n export const capitaliseString = (string)  =>\r\n  {\r\n      return string.replace(/\\b\\w/g, l => l.toUpperCase());\r\n  }\r\n\r\n","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport 'typeface-roboto';\r\nimport { Typography } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\n\r\nimport * as API from '../../Api';\r\n\r\nconst styles = theme => ({\r\n\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      display: 'flex',\r\n      flexWrap: 'wrap'     \r\n\r\n    },\r\n  },\r\n  paper : {\r\n      width: '40%',\r\n      marginLeft: '30%',\r\n      padding: 10\r\n  },\r\n  button: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n\r\n});\r\n\r\n\r\n\r\nclass Employee extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            isLoading: true,\r\n            id: null,\r\n            name: '',\r\n            dob: '',     \r\n            phone: '',     \r\n            bonus: '',     \r\n            bonus_type: '',     \r\n            rdo_bal: '',     \r\n            pld: '',     \r\n            anl: '',     \r\n            anniversary_dt: '',     \r\n            apprentice_year: '',     \r\n            location: '',     \r\n            company: '',     \r\n            inactive: '0',     \r\n        }\r\n    }\r\n        \r\n    componentDidMount() {\r\n        if (this.props.employee_id) {\r\n            API.get('employees', this.props.employee_id)\r\n            .then((employee) => {            \r\n                this.setState(() => ({\r\n                    id: employee.id,\r\n                    name: employee.name,\r\n                    dob: employee.dob,\r\n                    phone: employee.phone,\r\n                    bonus: employee.bonus,\r\n                    car_allowance: employee.car_allowance,   \r\n                    bonus_type: employee.bonus_type,   \r\n                    rdo_bal: employee.rdo_bal,\r\n                    pld: employee.pld,\r\n                    anl: employee.anl,\r\n                    anniversary_dt: employee.anniversary_dt,\r\n                    apprentice_year: employee.apprentice_year,\r\n                    location: employee.location,\r\n                    company: employee.company,\r\n                    inactive: employee.inactive,\r\n                    //Loading\r\n                    isLoading: false\r\n        \r\n                }))                    \r\n            })    \r\n    \r\n        } else {\r\n            this.setState(() => ({\r\n                isLoading: false\r\n            }))\r\n                \r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    handleSave(state) {\r\n\r\n            API.save('employees', state)\r\n            .then((employee) => {            \r\n                console.log(employee)\r\n                this.props.history.goBack()\r\n            })\r\n            \r\n    }\r\n\r\n    handleChange(event) {\r\n        \r\n        const { target: { name, value } } = event\r\n        this.setState(() => ({\r\n                [name]: value\r\n            }));        \r\n        \r\n    \r\n    }\r\n\r\n    render () {\r\n    \r\n    return (\r\n        <div>\r\n        <Typography variant=\"h3\" component=\"h2\" className={this.props.classes.paper} style={{textAlign: 'center'}}>\r\n            {this.props.action}\r\n        </Typography>\r\n\r\n        { (\r\n            <Paper elevation={3} className={this.props.classes.paper}>\r\n                <form className={this.props.classes.root} noValidate autoComplete=\"off\">\r\n                <div>\r\n                    <TextField required label=\"Name\" value={this.state.name} variant=\"outlined\" InputLabelProps={{ shrink: true}} name=\"name\" onChange={(e) => this.handleChange(e)}/>\r\n                    \r\n                    <TextField id=\"dob\" label=\"D.O.B\" type=\"date\" variant=\"outlined\" value={this.state.dob} InputLabelProps={{ shrink: true}} name=\"dob\" onChange={(e) => this.handleChange(e)}/>\r\n\r\n                    <TextField id=\"phone\" label=\"Phone\" variant=\"outlined\" value={this.state.phone ? this.state.phone : '' } InputLabelProps={{ shrink: true}} name=\"phone\" onChange={(e) => this.handleChange(e)}/>\r\n                    \r\n                    <TextField id=\"bonus\" label=\"Bonus\" name=\"bonus\" type=\"number\" variant=\"outlined\" value={this.state.bonus ? this.state.bonus : ''} InputLabelProps={{ shrink: true}} name=\"bonus\" onChange={(e) => this.handleChange(e)}/>\r\n\r\n                    <TextField id=\"bonus_type\" select label=\"Bonus Type\" value={this.state.bonus_type ? this.state.bonus_type : ''} \r\n                    variant=\"outlined\" name=\"bonus_type\" onChange={(e) => this.handleChange(e)}>\r\n                        <option key={'N'} value={'N'}>None</option>\r\n                        <option key={'F'} value={'F'}>Foremen</option>\r\n                        <option key={'L'} value={'L'}>Leading Hand</option>          \r\n                    </TextField>\r\n                    <TextField id=\"car_allowance\" label=\"Car Allowance\" name=\"car_allowance\" type=\"number\" variant=\"outlined\" value={this.state.car_allowance ? this.state.car_allowance : ''} InputLabelProps={{ shrink: true}} name=\"car_allowance\" onChange={(e) => this.handleChange(e)}/>\r\n                    <TextField id=\"rdo_bal\" label=\"RDO Balance\" name=\"rdo_bal\" type=\"number\" variant=\"outlined\" value={this.state.rdo_bal ? this.state.rdo_bal : ''} InputLabelProps={{ shrink: true}} name=\"rdo_bal\" onChange={(e) => this.handleChange(e)}/>\r\n                    <TextField id=\"pld_bal\" label=\"PLD Balance\" name=\"pld_bal\" type=\"number\" variant=\"outlined\" value={this.state.pld ? this.state.pld : ''} InputLabelProps={{ shrink: true}} name=\"pld\" onChange={(e) => this.handleChange(e)}/>\r\n                    <TextField id=\"anl_bal\" label=\"Annual Leave Balance\" name=\"anl_bal\" type=\"number\" variant=\"outlined\" value={this.state.anl ? this.state.anl : ''} InputLabelProps={{ shrink: true}} name=\"anl\" onChange={(e) => this.handleChange(e)}/>\r\n                    <TextField id=\"anniversary_dt\" label=\"Apprentice Anniversary Date\" type=\"date\" variant=\"outlined\" value={this.state.anniversary_dt === null ? '' : this.state.anniversary_dt} InputLabelProps={{ shrink: true}} name=\"anniversary_dt\" onChange={(e) => this.handleChange(e)}/>\r\n                    <TextField id=\"apprentice_year\" select label=\"Apprentice Year\" value={this.state.apprentice_year === null ? '' : this.state.apprentice_year}\r\n                    variant=\"outlined\" name=\"apprentice_year\" onChange={(e) => this.handleChange(e)}>\r\n                        <option key={''} value={''}>-</option>            \r\n                        <option key={'1'} value={'1'}>1st</option>          \r\n                        <option key={'2'} value={'2'}>2nd</option>          \r\n                        <option key={'3'} value={'3'}>3rd</option>          \r\n                        <option key={'4'} value={'4'}>4rd</option>          \r\n                    </TextField>\r\n                    <TextField id=\"role\" select label=\"Role\" value={this.state.location}\r\n                    variant=\"outlined\" name=\"location\" onChange={(e) => this.handleChange(e)}>\r\n                        <option key={'P'} value={'P'}>Plumber</option>\r\n                        <option key={'A'} value={'A'}>Apprentice</option>\r\n                        <option key={'O'} value={'O'}>Office</option>          \r\n                        <option key={'L'} value={'L'}>Labourer</option>          \r\n                        \r\n                    </TextField>\r\n                    <TextField id=\"company\" select label=\"Company\" value={this.state.company}\r\n                     variant=\"outlined\" name=\"company\" onChange={(e) => this.handleChange(e)}>\r\n                        <option key={'C'} value={'C'}>Construction</option>\r\n                        <option key={'M'} value={'M'}>Maintenance</option>            \r\n                    </TextField>\r\n                    <TextField id=\"inactive\" select label=\"Inactive?\" value={this.state.inactive? '1' : '0'}\r\n                    variant=\"outlined\" name=\"inactive\" onChange={(e) => this.handleChange(e)}>\r\n                        <option key={'1'} value={'1'}>Yes</option>\r\n                        <option key={'0'} value={'0'}>No</option>            \r\n                    </TextField>\r\n                    <div>\r\n                        <ButtonGroup aria-label=\"outlined primary button group\" style={{width: '80%', marginLeft: '10%'}}>\r\n                            <Button variant=\"contained\" color=\"secondary\" style={{width: '50%', padding: '10px'}} component={Link} to={'/employees'}>Cancel</Button>                    \r\n                            <Button variant=\"contained\" color=\"primary\" style={{width: '50%', padding: 10}} onClick={() => this.handleSave(this.state)}>Save</Button>\r\n                        </ButtonGroup>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </Paper> \r\n            \r\n        )}\r\n    \r\n            \r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(Employee));","import React from 'react'\r\nimport Employee from '../../Components/Employee'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\n\r\n  \r\nfunction EditEmployee() {\r\n        let { id } = useParams();\r\n        return (            \r\n            <Employee action=\"Edit Employee\" employee_id={id}/>                            \r\n        )\r\n    }\r\n\r\n\r\nexport default EditEmployee\r\n","import React from 'react'\r\nimport Employee from '../../Components/Employee'\r\n\r\n\r\n\r\n\r\n  \r\nfunction AddEmployee() {\r\n\r\n        return (            \r\n            <Employee action=\"Add Employee\"/>                            \r\n        )\r\n    }\r\n\r\n\r\nexport default AddEmployee\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Page, Text, View, Document, StyleSheet } from 'react-pdf';\r\n\r\nexport default class Pdf extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            numPages: null, pageNumber: 1 \r\n        }\r\n        this.onDocumentLoadSuccess = this.onDocumentLoadSuccess.bind(this);\r\n        this.goToPrevPage = this.goToPrevPage.bind(this);\r\n        this.goToNextPage = this.goToNextPage.bind(this);\r\n\r\n        \r\n        \r\n    }\r\n    \r\n  \r\n\r\n  onDocumentLoadSuccess({ numPages }) {\r\n    this.setState({ numPages });\r\n  };\r\n\r\n  goToPrevPage() {\r\n    this.setState(state => ({ pageNumber: state.pageNumber - 1 }));      \r\n  }\r\n\r\n\r\n  goToNextPage() {\r\n    this.setState(state => ({ pageNumber: state.pageNumber + 1 }));  \r\n  }\r\n    \r\n\r\n  render() {\r\n    const { pageNumber, numPages } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <nav>\r\n          <button onClick={this.goToPrevPage}>Prev</button>\r\n          <button onClick={this.goToNextPage}>Next</button>\r\n        </nav>\r\n\r\n        <div style={{ width: '100%' }}>\r\n          <Document\r\n            file=\"/templates/TFN_declaration_form_signature.pdf\"\r\n            onLoadSuccess={this.onDocumentLoadSuccess}\r\n          >\r\n            <Page pageNumber={5} width={600}></Page>\r\n        \r\n          </Document>\r\n        </div>\r\n\r\n        <p>\r\n          Page {pageNumber} of {numPages}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, PDFViewer, Image } from '@react-pdf/renderer';\r\n\r\nimport {Table, TableCell, TableHeader, TableBody, DataTableCell} from '@david.kucsai/react-pdf-table'\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\n\r\nconst debug = false\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n\r\n        width: 600,\r\n        padding: '1cm'\r\n    },\r\n    section: {\r\n        margin: 10,\r\n        padding: 10,\r\n        flexGrow: 1\r\n    },\r\n    table: {\r\n        tableView: {marginTop: '70px'},\r\n        tableHead: {fontSize: 5}\r\n    }\r\n\r\n});\r\n\r\n\r\n\r\nconst employees = []\r\n\r\nlet dateTime = new Date();\r\n\r\n\r\nconst tableSize = {\r\n    name: 0.5,\r\n    dob: 0.3,\r\n    phone: 0.3,\r\n    job: 0.3,\r\n    apprentice_year: 0.3,\r\n    anniversary_dt: 0.3\r\n}\r\n\r\n// Create Document Component\r\nconst MyDocument = () => (\r\n    <Document>\r\n        <Page size=\"A4\" style={styles.page} debug={debug}>\r\n            <View>\r\n                <Text style={{ textAlign: 'right', fontStyle: 'italic', fontSize: 10 }} fixed>Printed: {dateTime.toLocaleDateString()}</Text>\r\n                <Image style={{ position: 'absolute', right: 0, top: 5, width: '100px' }} src=\"/img/logo.jpg\" />\r\n                <View style={{ flex: 1 }}>\r\n                    <Text style={{ textAlign: 'center', fontStyle: 'italic', fontSize: 15 }}>LIST OF EMPLOYEES</Text>\r\n\r\n                </View>\r\n\r\n                <View style={styles.table.tableView}>\r\n                <Table\r\n                    data={employees}\r\n                >\r\n                    <TableHeader style={styles.table.tableHead}>\r\n                        <TableCell weighting={tableSize.name} textAlign=\"center\" style={{fontSize: '10pt'}}>Name</TableCell>\r\n                        <TableCell weighting={tableSize.dob} textAlign=\"center\">D.O.B</TableCell>\r\n                        <TableCell weighting={tableSize.phone} textAlign=\"center\">Phone</TableCell>\r\n                        <TableCell weighting={tableSize.role} textAlign=\"center\">Role</TableCell>\r\n                        <TableCell weighting={tableSize.job} textAlign=\"center\">Job</TableCell>\r\n                        <TableCell weighting={tableSize.apprentice_year} textAlign=\"center\">Apprentice Year</TableCell>\r\n                        <TableCell weighting={tableSize.anniversary_dt} textAlign=\"center\">Apprentice Rollover</TableCell>\r\n                    </TableHeader>\r\n                    <TableBody>\r\n                        <DataTableCell getContent={(r) => r.name} weighting={tableSize.name}/>\r\n                        <DataTableCell getContent={(r) => r.dob} weighting={tableSize.dob}/>\r\n                        <DataTableCell getContent={(r) => r.phone} weighting={tableSize.phone}/>\r\n                        <DataTableCell getContent={(r) => r.role} weighting={tableSize.role}/>\r\n                        <DataTableCell getContent={(r) => r.job} weighting={tableSize.job}/>\r\n                        <DataTableCell getContent={(r) => r.apprentice_year} weighting={tableSize.apprentice_year}/>\r\n                        <DataTableCell getContent={(r) => r.anniversary_dt} weighting={tableSize.anniversary_dt}/>\r\n                    </TableBody>\r\n                </Table>\r\n\r\n                </View>\r\n            </View>\r\n        </Page>\r\n    </Document>\r\n);\r\n\r\n\r\nconst ListEmployees = () => (\r\n    <PDFViewer width={'100%'} height={900}>\r\n        <MyDocument />\r\n    </PDFViewer>\r\n);\r\n\r\n\r\n/*\r\nconst ListEmployeesDownload = () => (\r\n    <div>\r\n        <PDFDownloadLink document={<MyDocument />} fileName=\"somename.pdf\">\r\n            {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\r\n        </PDFDownloadLink>\r\n    </div>\r\n)\r\n*/\r\nexport default ListEmployees;\r\n","import React, { Component } from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, PDFViewer, Image } from '@react-pdf/renderer';\r\nimport * as API from '../../Api';\r\nimport {Table, TableCell, TableHeader, TableBody, DataTableCell} from '@david.kucsai/react-pdf-table'\r\n\r\n\r\nconst debug = false\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        width: 600,\r\n        padding: '1cm'\r\n    },\r\n\r\n});\r\n\r\n\r\n\r\n//Creates style for report's header\r\n\r\nconst stylesHeader = StyleSheet.create({\r\n\r\n    title: { \r\n        textAlign: 'center',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        backgroundColor: '#ff9900',\r\n        fontSize: '12pt',\r\n        fontWeight: 'bold',\r\n        height: 30,\r\n        padding: '8px 0'\r\n    },\r\n    row: {\r\n        flexDirection: 'row'\r\n    },\r\n    rowsTitle: {\r\n        textAlign: 'center',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        width: 100,\r\n        fontSize: '12pt'\r\n    },\r\n    rowsDetail: {\r\n        textAlign: 'left',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        width: 535,\r\n        fontSize: '12pt',\r\n        paddingLeft: 5\r\n\r\n    },\r\n    logo: {\r\n        textAlign: 'left',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderColor: 'black',\r\n        width: 150,        \r\n        paddingLeft: 5,\r\n        borderBottom: 0,\r\n        borderTop: 0\r\n\r\n    }\r\n  });\r\n\r\n\r\n//Creates style for report's table\r\n\r\nconst stylesTable = StyleSheet.create({\r\n    header: {\r\n        textAlign: 'center',\r\n        backgroundColor: '#ff9900',\r\n        height: 25,\r\n        fontSize: '10pt',\r\n    },\r\n    cell: {\r\n        textAlign: 'center',\r\n        fontSize: '10pt',\r\n        \r\n    },\r\n\r\n    photo: {\r\n        height: '47.85px'\r\n    }\r\n})\r\n\r\nconst projects = {\r\n      name: '608 Tonkin St Cronulla (Richard Crooks)',\r\n      date: new Date().toLocaleDateString()\r\n}\r\n\r\n\r\n\r\nexport class FireRegister extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            project : {\r\n                name: '',\r\n                date: new Date().toLocaleDateString()\r\n          },\r\n\r\n          penetrations: [],\r\n          isLoading: true\r\n                       \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.getAll('fire_identification', this.props.match.params.id)\r\n        .then((penetrations) => {          \r\n            this.setState(() => ({\r\n                penetrations: penetrations,\r\n                isLoading: false,\r\n                project: {\r\n                    name: penetrations[0].description,\r\n                    date: new Date().toLocaleDateString()\r\n                }    \r\n            }))  \r\n        })           \r\n    \r\n    }\r\n    \r\n    \r\n\r\n\r\n    render() {\r\n        const project = this.state.project\r\n        if (!this.state.isLoading) {\r\n\r\n        \r\n        return (\r\n            <PDFViewer width={'100%'} height={900}>\r\n            <Document>\r\n                <Page size=\"A4\" style={styles.page} debug={debug} orientation=\"landscape\">\r\n                    <View fixed>            \r\n                        <View debug={debug} >\r\n                            <Text style={stylesHeader.title}>PENETRATION INSPECTION</Text>                    \r\n                        </View>\r\n                        <View debug={debug} style={stylesHeader.row}>\r\n                            <Text style={stylesHeader.rowsTitle}>Project Name:</Text>                    \r\n                            <Text style={stylesHeader.rowsDetail}>{project.name}</Text>  \r\n                            <Text style={stylesHeader.logo}></Text>                      \r\n                        </View>\r\n                        <View debug={debug} style={stylesHeader.row}>\r\n                            <Text style={stylesHeader.rowsTitle}>Contact:</Text>                    \r\n                            <Text style={stylesHeader.rowsDetail}>Smart Plumbing Solutions</Text>                    \r\n                            <Text style={stylesHeader.logo}></Text>                      \r\n                        </View>\r\n                        <View debug={debug} style={stylesHeader.row}>\r\n                            <Text style={stylesHeader.rowsTitle}>Phone:</Text>                    \r\n                            <Text style={stylesHeader.rowsDetail}>1300 007 6278</Text>                    \r\n                            <Text style={stylesHeader.logo}></Text>                      \r\n                        </View>\r\n                        <View debug={debug} style={stylesHeader.row}>\r\n                            <Text style={stylesHeader.rowsTitle}>Address:</Text>                    \r\n                            <Text style={stylesHeader.rowsDetail}>1/17 Chester Street, Annandale NSW 2038</Text>                    \r\n                            <Text style={stylesHeader.logo}></Text>                      \r\n                        </View>\r\n                        <View debug={debug} style={stylesHeader.row}>\r\n                            <Text style={stylesHeader.rowsTitle}>Date:</Text>                    \r\n                            <Text style={stylesHeader.rowsDetail}>{project.date}</Text>                    \r\n                            <Text style={[stylesHeader.logo, {borderBottom: 1}]}></Text>                      \r\n                            <Image style={{ position: 'absolute', right: 20, top: -55, width: '100px' }} src=\"/img/logo.jpg\"/>\r\n                        </View>                            \r\n                        <View style={{marginTop: 15}}>\r\n                        <TableHeader >\r\n                                <TableCell style={stylesTable.header} weighting={0.70}>Reference</TableCell>\r\n                                <TableCell style={stylesTable.header}>Drawing</TableCell>\r\n                                <TableCell style={stylesTable.header}>Photo</TableCell>\r\n                                <TableCell style={stylesTable.header} >FRL</TableCell>\r\n                                <TableCell style={stylesTable.header}>Installed By</TableCell>\r\n                                <TableCell style={stylesTable.header}>Installation Date</TableCell>\r\n                                <TableCell style={stylesTable.header}>Manufacturer</TableCell>\r\n                        </TableHeader>        \r\n                        </View>        \r\n                    </View>        \r\n                    <View>\r\n                    <Table data={this.state.penetrations}>\r\n                            <TableBody>\r\n                                <DataTableCell getContent={(r) => r.fire_number} style={stylesTable.cell} weighting={0.70}/>\r\n                                <DataTableCell getContent={(r) => r.drawing} style={stylesTable.cell}/>\r\n                                <DataTableCell getContent={(r) => <Image style={stylesTable.photo} src={r.fire_photo}/>}/>\r\n                                <DataTableCell getContent={(r) => r.fire_resist_level} style={stylesTable.cell}/>\r\n                                <DataTableCell getContent={(r) => r.install_by} style={stylesTable.cell}/>\r\n                                <DataTableCell getContent={(r) => r.formated_date} style={stylesTable.cell}/>\r\n                                <DataTableCell getContent={(r) => r.manufacturer} style={stylesTable.cell}/>                                \r\n                            </TableBody>\r\n                        </Table>                \r\n                    </View>\r\n                </Page>\r\n            </Document>\r\n            </PDFViewer>\r\n        \r\n        )\r\n        } else {\r\n            return (<h1>Loading...</h1>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default FireRegister","import React, { Component } from 'react'\r\n\r\nimport { Route } from 'react-router-dom'\r\nimport NavBar from './Components/NavBar';\r\nimport  Home from './Scenes/Home'\r\nimport Jobs from './Scenes/Jobs';\r\nimport Users from './Scenes/Users';\r\nimport Employees from './Scenes/Employees';\r\nimport EditEmployee from './Scenes/Employees/edit';\r\nimport AddEmployee from './Scenes/Employees/add';\r\n\r\nimport Pdf from './Reports/PDF';\r\nimport ListEmployees from './Reports/Employees/list';\r\nimport FireRegister from './Reports/Job/FireRegister';\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n  \r\n    componentDidMount() {\r\n        //console.log(API.get(32));\r\n      }\r\n    \r\n\r\n    render() {\r\n    \r\n        \r\n        return (\r\n          <div className=\"App\">\r\n            <NavBar/>            \r\n            <Route exact path=\"/\" component={Home}/>      \r\n            <Route exact path=\"/jobs\" component={Jobs}/>    \r\n            <Route exact path=\"/users\" component={Users}/>    \r\n            <Route exact path=\"/employees\" component={Employees}/>    \r\n            <Route exact path=\"/employees/add\" component={AddEmployee}/>   \r\n            <Route exact path=\"/employees/:id\" component={EditEmployee}/>   \r\n\r\n            <Route exact path=\"/reports/employees\" component={ListEmployees}/>   \r\n            <Route exact path=\"/reports/jobs/fire/:id\" component={FireRegister}/>   \r\n\r\n            <Route exact path=\"/pdf\" component={Pdf}/>                     \r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\n\nReactDOM.render(  \n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}